name: Build & Deploy
on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: eu-central-1
  AWS_ACCOUNT_ID: 959413831332
  ECR_REPOSITORY: greeter

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.short_sha }}
      image_uri: ${{ steps.meta.outputs.image_uri }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/eks-ci-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
            | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Compute image meta
        id: meta
        run: |
          SHORT_SHA="${GITHUB_SHA::7}"
          echo "short_sha=$SHORT_SHA" >> "$GITHUB_OUTPUT"
          echo "image_uri=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$SHORT_SHA" >> "$GITHUB_OUTPUT"

      - name: Build & Push image
        run: |
          docker build -t "${{ steps.meta.outputs.image_uri }}" -f Dockerfile .
          docker push "${{ steps.meta.outputs.image_uri }}"

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/eks-ci-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init/Apply (greeter)
        working-directory: ./greeter
        env:
          TF_VAR_image_repository: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}
          TF_VAR_image_tag: ${{ needs.build-and-push.outputs.image_tag }}
          TF_VAR_hello_tag: ${{ github.run_number }}
        run: |
          terraform init -input=false
          terraform apply -input=false -auto-approve \
            -var image_repository="${TF_VAR_image_repository}" \
            -var image_tag="${TF_VAR_image_tag}" \
            -var hello_tag="${TF_VAR_hello_tag}"